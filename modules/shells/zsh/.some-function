# vim:ft=sh

fcd() {
    local dir
    dir=$(find "${1:-.}" -path '*/\.*' -prune \
        -o -type d -print 2> /dev/null | fzf +m) &&
    cd "$dir"
    # DIR=`find * -maxdepth 0 -type d -print 2> /dev/null | fzf` \
        # && cd "$DIR"
}

fman() {
    man -k . | fzf --prompt='Man> ' | awk '{print $1}' | xargs -r man
}

femoji(){
    emojis=$(curl -sSL 'https://git.io/JXXO7')
    selected_emoji=$(echo "$emojis" | fzf)
    echo "$selected_emoji"
}

# fkill - kill processes - list only the ones you can kill.
fkill() {
    local pid
    if [ "$UID" != "0" ]; then
        pid=$(ps -f -u "$UID" | sed 1d | fzf -m | awk '{print $2}')
    else
        pid=$(ps -ef | sed 1d | fzf -m | awk '{print $2}')
    fi

    if [ "x$pid" != "x" ]
    then
        echo "$pid" | xargs kill -"${1:-9}"
    fi
}

open ()
{
    for i in "$@"
    do
        setsid nohup xdg-open "$i" > /dev/null 2> /dev/null
    done
}

toggle_animation ()
{
    enabled=$(gsettings get org.gnome.desktop.interface enable-animations)
    if [[ "$enabled" == true ]]; then
        gsettings set org.gnome.desktop.interface enable-animations false
    else
        gsettings set org.gnome.desktop.interface enable-animations true
    fi
}

ff ()
{
local directories=(
"$HOME"/
"$HOME"/*/
"$HOME"/*/*/
"$HOME"/development/*/*/
"$HOME"/development/*/*/*/
"$HOME"/.*/
"$HOME"/.*/*/
"$HOME"/.*/*/*/
"$HOME"/.local/share/nvim/lazy/
)
  local RESULT
  # shellcheck disable=2086
  # $directories and $fzf have to be unquoted
  RESULT=$( (fd . $directories --min-depth=1 --max-depth=1 -t=d) | fzf)
  if [ "$RESULT" = "" ]; then
    :
  else
    # shellcheck disable=2086
    cd "$RESULT" || exit
  fi
}

# Requires https://github.com/caarlos0/timer to be installed. spd-say should ship with your distro
# declare -A pomo_options
# pomo_options["work"]="45"
# pomo_options["break"]="10"
#
# pomodoro () {
#   if [ -n "$1" -a -n "${pomo_options["$1"]}" ]; then
#     val=$1
#     echo $val | lolcat
#     timer ${pomo_options["$val"]}m
#     spd-say "'$val' session done"
#     notify-send --app-name=Pomodoro"'$val' session done"
#   fi
# }

# alias wo="pomodoro 'work'"
# alias br="pomodoro 'break'"

# take functions

# shellcheck disable=1073,1072,1064
# mkcd is equivalent to takedir
function mkcd takedir() {
  mkdir -p $@ && cd ${@:$#}
}

function takeurl() {
  local data thedir
  data="$(mktemp)"
  curl -L "$1" > "$data"
  tar xf "$data"
  thedir="$(tar tf "$data" | head -n 1)"
  rm "$data"
  cd "$thedir"
}

function takegit() {
  git clone "$1"
  cd "$(basename ${1%%.git})"
}

function take() {
  if [[ $1 =~ ^(https?|ftp).*\.(tar\.(gz|bz2|xz)|tgz)$ ]]; then
    takeurl "$1"
  elif [[ $1 =~ ^([A-Za-z0-9]\+@|https?|git|ssh|ftps?|rsync).*\.git/?$ ]]; then
    takegit "$1"
  else
    takedir "$@"
  fi
}

hm-rollback() {
  directory=$(home-manager generations | fzf --height 40% --layout=reverse | awk -F ' ' '{print $7}')
  if [ -n "$directory" ]; then
    cd $directory;
    ./activate;
    cd;
  fi
}

which-cd() {
  cd $(dirname $(which "$1"))
  ls -la | grep "$1"
}
